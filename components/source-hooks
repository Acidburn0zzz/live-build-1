#!/usr/bin/python3

## live-build(7) - Live System Build Components
## Copyright (C) 2006-2013 Daniel Baumann <mail@daniel-baumann.ch>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


import argparse
import configparser
import glob
import os
import shutil
import subprocess
import sys


# TODO:
#   * logfile output
#   * lockfile handling
#   * use gettext for i18n

def main():
	## Parsing Arguments
	arguments = argparse.ArgumentParser(
		prog            = 'lb source-hooks',
		usage           = '%(prog)s [arguments]',
		description     = '''live-build contains the components to build a live system from a configuration directory.
		                     The source-hooks command executes hook files after the source stage.''',
		epilog          = 'See \'man lb-source-hooks\' for more information.',
		formatter_class = argparse.ArgumentDefaultsHelpFormatter
	)

	arguments.add_argument('--version',     help='show program\'s version number and exit', action='version', version='live-build 4')
	arguments.add_argument('--verbose',     help='set verbose option',                      action='store_true')

	args = arguments.parse_args()

	# --verbose
	verbose = args.verbose

	## Calling source hooks

	# stagefile
	if os.path.isfile('.build/source-hooks'):
		if verbose:
			print('I: source-hooks already done - nothing to do')

		sys.exit(0)

	# dependencies
	if not os.path.isfile('.build/source'):
		print('E: source stage missing - aborting', file=sys.stderr)

		if verbose:
			print('I: use \'lb source\' to source system')

		sys.exit(1)

	# hooks
	if not glob.glob('config/hooks/*.hook') and not glob.glob('config/hooks/*.hook.source'):
		if verbose:
			print ('I: no source hooks found at config/hooks/*.hook{,.source} - nothing to do')

		sys.exit(0)

	# bind mount configuration directory
	if verbose:
		print('I: Mounting config to source/live-build/config')

	os.makedirs('source/live-build/config', exist_ok=True)

	mount = subprocess.call('mount -o bind config source/live-build/config', shell=True)
	remount = subprocess.call('mount -o remount,ro,bind source/live-build/config', shell=True)

	# process hooks
	os.makedirs('source/live-build', exist_ok=True)

	hooks = glob.glob('config/hooks/*.hook') + glob.glob('config/hooks/*.hook.source')

	for hook in hooks:
		if verbose:
			print('I: Copying config/hooks/*.hook.source to source/live-build')

		shutil.copy(hook, os.path.join('source/live-build/' + os.path.basename(hook)), follow_symlinks=True)

		if verbose:
			print('I: Executing \' ' + hook + '\'')

		os.chmod(hook, 0o755)
		exec_hook = subprocess.call('cd source && live-build/' + os.path.basename(hook), shell=True)
		os.remove('source/live-build/' + os.path.basename(hook))

	# unmount coniguration directory
	umount = subprocess.call('umount source/live-build/config', shell=True)

	os.rmdir('source/live-build/config')
	os.rmdir('source/live-build')

	# stagefile
	os.makedirs('.build', exist_ok=True)
	open('.build/source-hooks', 'w').close()


if __name__ == '__main__':
	main()
