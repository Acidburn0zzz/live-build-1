#!/bin/sh

## live-build(7) - System Build Scripts
## Copyright (C) 2006-2010 Daniel Baumann <daniel@debian.org>
##
## live-build comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Including common functions
. "${LB_BASE:-/usr/share/live/build}"/scripts/build.sh

# Setting static variables
DESCRIPTION="$(Echo 'cache bootstrap stage')"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffiles config/all config/common config/bootstrap config/chroot config/binary config/source
Set_defaults

# Check architecture
Check_crossarchitectures

for _ARCHITECTURE in ${LB_ARCHITECTURES}
do
	Echo_message "Begin caching bootstrap stage..."

	for STAGE in ${LB_CACHE_STAGES}
	do
		if [ "${STAGE}" = "bootstrap" ]
		then
			case "${1}" in
				restore)
					# Checking stage file
					Check_stagefile .stage/bootstrap_cache.${_ARCHITECTURE}-restore

					if [ -d cache/stages_bootstrap.${_ARCHITECTURE} ]
					then
						# Checking lock file
						Check_lockfile .lock

						# Creating lock file
						Create_lockfile .lock

						# Removing old chroot
						rm -rf chroot.${_ARCHITECTURE}

						# Restoring old cache
						${LB_ROOT_COMMAND} cp -a cache/stages_bootstrap.${_ARCHITECTURE} chroot.${_ARCHITECTURE}

						if [ -n "${LB_ROOT_COMMAND}" ]
						then
							${LB_ROOT_COMMAND} chown -R $(whoami):$(whoami) chroot.${_ARCHITECTURE}
						fi

						# Creating stage file
						Create_stagefile .stage/bootstrap_cache.${_ARCHITECTURE}-restore
						Create_stagefile .stage/bootstrap.${_ARCHITECTURE}

						exit 0
					fi
					;;

				save)
					# Checking stage file
					Check_stagefile .stage/bootstrap_cache.${_ARCHITECTURE}-save

					# Checking lock file
					Check_lockfile .lock

					# Creating lock file
					Create_lockfile .lock

					rm -rf cache/stages_bootstrap.${_ARCHITECTURE}

					mkdir -p cache

					${LB_ROOT_COMMAND} cp -a chroot.${_ARCHITECTURE} cache/stages_bootstrap.${_ARCHITECTURE}

					if [ -n "${LB_ROOT_COMMAND}" ]
					then
						${LB_ROOT_COMMAND} chown -R $(whoami):$(whoami) cache/stages_bootstrap.${_ARCHITECTURE}
					fi

					# Creating stage file
					Create_stagefile .stage/bootstrap_cache.${_ARCHITECTURE}-save
					;;
			esac
		fi
	done
done
