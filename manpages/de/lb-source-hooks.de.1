.\" live-build(7) - System Build Scripts
.\" Copyright (C) 2006-2014 Daniel Baumann <mail@daniel-baumann.ch>
.\"
.\" This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
.\" This is free software, and you are welcome to redistribute it
.\" under certain conditions; see COPYING for details.
.\"
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH LIVE\-BUILD 1 31.03.2014 4.0~alpha33\-1 "Live Systems Projekt"

.SH NAME
\fBlive\-build\fP \- System Build Komponenten

.SH SYNTAX
\fBlb source\-hooks\fP [\-\-verbose]
.PP
\fBlb source\-hooks\fP [\-\-help]
.br
\fBlb source\-hooks\fP [\-\-version]
.
.SH BESCHREIBUNG
live\-build enthält die Komponenten um ein Live System von einem
Konfigurationsverzeichnis zu erstellen.
.PP
Der \fBlb source\-hooks\fP Befehl führt Hooks Dateien nach dem Source Stage aus.

.SH SPEZIFIKATION
\fBlb source\-hooks\fP führt alle Hook Dateien die sich im \fBconfig/hooks\fP
Verzeichnis innerhalb des Konfigurationsvereichnisses befinden aus.
.PP
Hook Dateien benötigen weder einen speziellen Besitzer noch spezielle
Zugriffsrechte. Sie werden automatisch als ausführbar markiert wenn sie von
\fBlb source\-hooks\fP ausgeführt werden.
.PP
Hook Dateien müssen entweder den Suffix \fB*.hook\fP oder \fB*.hook.source\fP
haben.
.PP
Hook Dateien mit dem Suffix \fB*.hook\fP werden als erstes ausgeführt, Hook
Dateien mit dem Suffix \fB*.hook.source\fP als zweites.
.PP
Hook Dateien werden von \fBlb source\-hooks\fP in alphanummerischer Reihenfolge
ausgeführt. Falls eine Hook Datei davon abhängt nach einer anderen Hook
Datei ausgeführt zu werden, ist die empfohlene Vorgehensweise Nummern als
Prefixes (nnnn, beginnend mit 0001) zu benutzen um die
Ausführungsreihenfolge zu sichern.
.PP
Hook Dateien werden durch \fBlb source\-hooks\fP in das \fBsource/live\-build\fP
Verzeichnis kopiert. Sie werden innerhalb des source Verzeichnises
ausgeführt und können das Konfigurationsverzeichnis in \fBlive\-build/config\fP
innerhalb des source Verzeichnisses lesen.
.PP
\fBWarnung:\fP Hook Dateien werden nicht in einem Chroot sondern innerhalb des
Kontext des Host Systems im source Vereichnis ausgeführt. Sie haben Root
Privilegien und Zugang zu allen Ressourcen des Host Systems (Geräte,
Dateisysteme, Netzwerk, etc.).

.SH OPTIONEN
.IP \fB\-\-verbose\fP 4
setzt verbose Option für mehr Ausgaben (Standardwert: aus).
.IP "\fB\-h, \-\-help\fP" 4
zeigt Hilfenachricht und beendet sich.
.IP \fB\-\-version\fP 4
zeigt Versionsnummer des Programms und beendet sich.

.SH DATEIEN
.IP \fBconfig/hooks/*.hook\fP: 4
Allgemeine Hook Dateien.
.IP \fBconfig/hooks/*.hook.source\fP: 4
Hook Dateien spezifisch für den Source Stage.
.IP \fBsource\fP: 4
Verzeichnis in dem Hook Dateien ausgeführt werden.
.IP \fBsource/live\-build/config\fP: 4
bind mount des Konfigurationsverzeichnis innerhalb des source Verzeichnisses
um von Hook Dateien gelesen werden zu können.
.IP \fBsource/live\-build\fP: 4
Verzeichnis in das die Hook Dateien kopiert werden.

.SH "SIEHE AUCH"
.IP \fIlb\-bootstrap\-hooks\fP(1) 4
.IP \fIlb\-chroot\-hooks\fP(1) 4
.IP \fIlb\-binary\-hooks\fP(1) 4

.SH HOMEPAGE
Weitere Informationen über live\-build und das Live Systems Projekt können
auf der Homepage unter <\fIhttp://live\-systems.org/\fP> und im Handbuch
unter <\fIhttp://live\-systems.org/manual/\fP> gefunden werden.

.SH FEHLER
Fehler können durch Einreichen eines Fehlerberichtes für das live\-build
Paket im Bug Tracking System unter <\fIhttp://bugs.debian.org/\fP> oder
durch Senden einer E\-Mail an die Live Systems Mailing Liste unter
<\fIdebian\-live@lists.debian.org\fP> (englischsprachig) mitgeteilt
werden.

.SH AUTOR
live\-build wurde von Daniel Baumann <\fImail@daniel\-baumann.ch\fP>
geschrieben.
